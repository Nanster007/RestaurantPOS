package possystem;

import possystem.menuitems.MenuItem;
import java.awt.Color;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author tylar
 */
public class MenuItemDetailsPanel extends CustomPanel {

    MenuItem menuItem;
    CustomerOrder customerOrder;
    Color defaultColor;
    MainFrame mainFrame;
    Boolean itemComplete;
    
    public MenuItemDetailsPanel(MainFrame mainFrame, MenuItem menuItem, CustomerOrder customerOrder) {
        initComponents();
        this.menuItem = menuItem;
        this.customerOrder = customerOrder;
        this.mainFrame = mainFrame;
        this.itemComplete = false;
        
        setPanels(menuItem.getName());
    }
    
    private void setPanels(String itemName){
        ItemSizePanel.setVisible(false);
        MilkShakeFlavorPanel.setVisible(false);
        CoffeeTeaPanel.setVisible(false);
        DraftBeerPanel.setVisible(false);
        WinePanel.setVisible(false);
        MargaritaPanel.setVisible(false);
        MixedDrinksPanel.setVisible(false);
        defaultColor = null;
        
        CurrentItem.setText(itemName);
        ItemPrice.setText(""+ menuItem.getPrice());
        
        if(itemName.equals("Draft")){
            DraftBeerPanel.setVisible(true);
        }
        else if(itemName.equals("Wine")){
            WinePanel.setVisible(true);
        }
        else if(itemName.contains("Fountain") || itemName.contains("Juice") || itemName.contains("Cappuchino")){
            ItemSizePanel.setVisible(true);
        }
        else if(itemName.contains("Milkshake")){
            ItemSizePanel.setVisible(true);
            MilkShakeFlavorPanel.setVisible(true);
        }
        else if(itemName.contains("Hot Tea") || itemName.contains("Coffee")){
            CoffeeTeaPanel.setVisible(true);
        }
        else if(itemName.contains("Margarita")){
            MargaritaPanel.setVisible(true);
        }
        else if(itemName.contains("Moscow Mule") || itemName.contains("Martini") || itemName.contains("Whiskey Sour") || itemName.contains("Old Fashion")){
            MixedDrinksPanel.setVisible(true);
        }
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        CurrentItemPanel = new javax.swing.JPanel();
        ItemSizePanel = new javax.swing.JPanel();
        ItemSizeLabel = new javax.swing.JLabel();
        SmallButton = new javax.swing.JButton();
        MediumButton = new javax.swing.JButton();
        LargeButton = new javax.swing.JButton();
        MilkShakeFlavorPanel = new javax.swing.JPanel();
        MilkShakeLabel = new javax.swing.JLabel();
        ChocolateLabel = new javax.swing.JButton();
        VanillaLabel = new javax.swing.JButton();
        StrawberryLabel = new javax.swing.JButton();
        CoffeeTeaPanel = new javax.swing.JPanel();
        CoffeeTeaLabel = new javax.swing.JLabel();
        SkimMilkButton = new javax.swing.JButton();
        HalfnHalfButton = new javax.swing.JButton();
        FullMilkButton = new javax.swing.JButton();
        SplendaButton = new javax.swing.JButton();
        SugarButton = new javax.swing.JButton();
        DraftBeerPanel = new javax.swing.JPanel();
        DraftBeerLabel = new javax.swing.JLabel();
        BudlightButton = new javax.swing.JButton();
        TruthButton = new javax.swing.JButton();
        BlueMoonButton = new javax.swing.JButton();
        MillerLiteButton = new javax.swing.JButton();
        DraftSizeLabel = new javax.swing.JLabel();
        largeOzButton = new javax.swing.JButton();
        SmallOzButton = new javax.swing.JButton();
        WinePanel = new javax.swing.JPanel();
        WineSelectionLabel = new javax.swing.JLabel();
        SizeLabel = new javax.swing.JLabel();
        WhiteWineButton = new javax.swing.JButton();
        RedWineButton = new javax.swing.JButton();
        PinkWineButton = new javax.swing.JButton();
        GlassButton = new javax.swing.JButton();
        BottleButton = new javax.swing.JButton();
        AddItemButton = new javax.swing.JButton();
        CommentsPanel = new javax.swing.JPanel();
        CommentsLabel = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        ExtraCommentsArea = new javax.swing.JTextArea();
        jButton1 = new javax.swing.JButton();
        MixedDrinksPanel = new javax.swing.JPanel();
        StyleLabel = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        DryButton = new javax.swing.JButton();
        RocksButton = new javax.swing.JButton();
        RemoveShotButton = new javax.swing.JButton();
        ExtraShotButton = new javax.swing.JButton();
        MargaritaPanel = new javax.swing.JPanel();
        MargaritaSizeLabel = new javax.swing.JLabel();
        Margarita16OzButton = new javax.swing.JButton();
        Margarita24OzButton = new javax.swing.JButton();
        BlueRaspberryButton = new javax.swing.JButton();
        LemonLimeButton = new javax.swing.JButton();
        PinaColodaButton = new javax.swing.JButton();
        MargaritaFlavorLabel = new javax.swing.JLabel();
        CurrentItemLabel = new javax.swing.JLabel();
        CurrentItem = new javax.swing.JLabel();
        ItemPriceLabel = new javax.swing.JLabel();
        ItemPrice = new javax.swing.JLabel();

        javax.swing.GroupLayout CurrentItemPanelLayout = new javax.swing.GroupLayout(CurrentItemPanel);
        CurrentItemPanel.setLayout(CurrentItemPanelLayout);
        CurrentItemPanelLayout.setHorizontalGroup(
            CurrentItemPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        CurrentItemPanelLayout.setVerticalGroup(
            CurrentItemPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 36, Short.MAX_VALUE)
        );

        ItemSizeLabel.setText("Please Select a Size");

        SmallButton.setText("Small");
        SmallButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SmallButtonActionPerformed(evt);
            }
        });

        MediumButton.setText("Medium");
        MediumButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MediumButtonActionPerformed(evt);
            }
        });

        LargeButton.setText("Large");
        LargeButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                LargeButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout ItemSizePanelLayout = new javax.swing.GroupLayout(ItemSizePanel);
        ItemSizePanel.setLayout(ItemSizePanelLayout);
        ItemSizePanelLayout.setHorizontalGroup(
            ItemSizePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(SmallButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(MediumButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(LargeButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(ItemSizePanelLayout.createSequentialGroup()
                .addGap(42, 42, 42)
                .addComponent(ItemSizeLabel)
                .addContainerGap(43, Short.MAX_VALUE))
        );
        ItemSizePanelLayout.setVerticalGroup(
            ItemSizePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ItemSizePanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(ItemSizeLabel)
                .addGap(18, 18, 18)
                .addComponent(SmallButton, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(MediumButton, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(LargeButton, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        MilkShakeLabel.setText("MilkShake Flavor");

        ChocolateLabel.setText("Chocolate");
        ChocolateLabel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ChocolateLabelActionPerformed(evt);
            }
        });

        VanillaLabel.setText("Vanilla");
        VanillaLabel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                VanillaLabelActionPerformed(evt);
            }
        });

        StrawberryLabel.setText("Strawberry");
        StrawberryLabel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                StrawberryLabelActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout MilkShakeFlavorPanelLayout = new javax.swing.GroupLayout(MilkShakeFlavorPanel);
        MilkShakeFlavorPanel.setLayout(MilkShakeFlavorPanelLayout);
        MilkShakeFlavorPanelLayout.setHorizontalGroup(
            MilkShakeFlavorPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(ChocolateLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(StrawberryLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(VanillaLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(MilkShakeFlavorPanelLayout.createSequentialGroup()
                .addGap(44, 44, 44)
                .addComponent(MilkShakeLabel)
                .addContainerGap(44, Short.MAX_VALUE))
        );
        MilkShakeFlavorPanelLayout.setVerticalGroup(
            MilkShakeFlavorPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(MilkShakeFlavorPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(MilkShakeLabel)
                .addGap(18, 18, 18)
                .addComponent(ChocolateLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(VanillaLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(StrawberryLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        CoffeeTeaLabel.setText("Coffee / Tea Extras");

        SkimMilkButton.setText("Skim Milk");
        SkimMilkButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SkimMilkButtonActionPerformed(evt);
            }
        });

        HalfnHalfButton.setText("Half & Half");
        HalfnHalfButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                HalfnHalfButtonActionPerformed(evt);
            }
        });

        FullMilkButton.setText("Full Milk");
        FullMilkButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                FullMilkButtonActionPerformed(evt);
            }
        });

        SplendaButton.setText("Splenda");
        SplendaButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SplendaButtonActionPerformed(evt);
            }
        });

        SugarButton.setText("Sugar");
        SugarButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SugarButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout CoffeeTeaPanelLayout = new javax.swing.GroupLayout(CoffeeTeaPanel);
        CoffeeTeaPanel.setLayout(CoffeeTeaPanelLayout);
        CoffeeTeaPanelLayout.setHorizontalGroup(
            CoffeeTeaPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(CoffeeTeaPanelLayout.createSequentialGroup()
                .addGroup(CoffeeTeaPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(HalfnHalfButton, javax.swing.GroupLayout.DEFAULT_SIZE, 101, Short.MAX_VALUE)
                    .addComponent(FullMilkButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(SkimMilkButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(CoffeeTeaPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(SplendaButton, javax.swing.GroupLayout.DEFAULT_SIZE, 100, Short.MAX_VALUE)
                    .addComponent(SugarButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
            .addGroup(CoffeeTeaPanelLayout.createSequentialGroup()
                .addGap(58, 58, 58)
                .addComponent(CoffeeTeaLabel)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        CoffeeTeaPanelLayout.setVerticalGroup(
            CoffeeTeaPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(CoffeeTeaPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(CoffeeTeaLabel)
                .addGap(18, 18, 18)
                .addGroup(CoffeeTeaPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(SkimMilkButton, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(SplendaButton, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(CoffeeTeaPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(HalfnHalfButton, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(SugarButton, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(FullMilkButton, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        DraftBeerLabel.setText("Draft Beer");

        BudlightButton.setText("Budlight");
        BudlightButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BudlightButtonActionPerformed(evt);
            }
        });

        TruthButton.setText("Truth");
        TruthButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TruthButtonActionPerformed(evt);
            }
        });

        BlueMoonButton.setText("Blue Moon");
        BlueMoonButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BlueMoonButtonActionPerformed(evt);
            }
        });

        MillerLiteButton.setText("Miller Lite");
        MillerLiteButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MillerLiteButtonActionPerformed(evt);
            }
        });

        DraftSizeLabel.setText("Draft Size");

        largeOzButton.setText("24 Oz.");
        largeOzButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                largeOzButtonActionPerformed(evt);
            }
        });

        SmallOzButton.setText("16 Oz.");
        SmallOzButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SmallOzButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout DraftBeerPanelLayout = new javax.swing.GroupLayout(DraftBeerPanel);
        DraftBeerPanel.setLayout(DraftBeerPanelLayout);
        DraftBeerPanelLayout.setHorizontalGroup(
            DraftBeerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(DraftBeerPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(DraftBeerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(DraftBeerPanelLayout.createSequentialGroup()
                        .addComponent(BudlightButton, javax.swing.GroupLayout.PREFERRED_SIZE, 164, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(TruthButton, javax.swing.GroupLayout.PREFERRED_SIZE, 164, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(DraftBeerPanelLayout.createSequentialGroup()
                        .addComponent(BlueMoonButton, javax.swing.GroupLayout.PREFERRED_SIZE, 164, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(MillerLiteButton, javax.swing.GroupLayout.PREFERRED_SIZE, 164, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(DraftBeerLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 346, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(DraftBeerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(largeOzButton, javax.swing.GroupLayout.DEFAULT_SIZE, 272, Short.MAX_VALUE)
                    .addComponent(SmallOzButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(DraftSizeLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        DraftBeerPanelLayout.setVerticalGroup(
            DraftBeerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(DraftBeerPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(DraftBeerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(DraftBeerLabel)
                    .addComponent(DraftSizeLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(DraftBeerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(BudlightButton, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(TruthButton, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(SmallOzButton, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(DraftBeerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(DraftBeerPanelLayout.createSequentialGroup()
                        .addGroup(DraftBeerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(BlueMoonButton, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(MillerLiteButton, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(DraftBeerPanelLayout.createSequentialGroup()
                        .addComponent(largeOzButton, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))))
        );

        WineSelectionLabel.setText("Wine Selection");

        SizeLabel.setText("Size");

        WhiteWineButton.setText("White Wine");
        WhiteWineButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                WhiteWineButtonActionPerformed(evt);
            }
        });

        RedWineButton.setText("Red Wine");
        RedWineButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RedWineButtonActionPerformed(evt);
            }
        });

        PinkWineButton.setText("Pink Wine");
        PinkWineButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PinkWineButtonActionPerformed(evt);
            }
        });

        GlassButton.setText("Glass");
        GlassButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                GlassButtonActionPerformed(evt);
            }
        });

        BottleButton.setText("Bottle");
        BottleButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BottleButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout WinePanelLayout = new javax.swing.GroupLayout(WinePanel);
        WinePanel.setLayout(WinePanelLayout);
        WinePanelLayout.setHorizontalGroup(
            WinePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(WinePanelLayout.createSequentialGroup()
                .addGap(48, 48, 48)
                .addComponent(WineSelectionLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(SizeLabel)
                .addGap(71, 71, 71))
            .addGroup(WinePanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(WinePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(PinkWineButton, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(WinePanelLayout.createSequentialGroup()
                        .addGroup(WinePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(WhiteWineButton, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(RedWineButton, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(10, 10, 10)
                        .addGroup(WinePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(GlassButton, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(BottleButton, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        WinePanelLayout.setVerticalGroup(
            WinePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(WinePanelLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(WinePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(WineSelectionLabel)
                    .addComponent(SizeLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(WinePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(WinePanelLayout.createSequentialGroup()
                        .addComponent(WhiteWineButton, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(RedWineButton, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(PinkWineButton, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(WinePanelLayout.createSequentialGroup()
                        .addComponent(GlassButton, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(BottleButton, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE))))
        );

        AddItemButton.setText("Add Item");
        AddItemButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AddItemButtonActionPerformed(evt);
            }
        });

        CommentsLabel.setText("Extra Comments");

        ExtraCommentsArea.setColumns(20);
        ExtraCommentsArea.setRows(5);
        jScrollPane1.setViewportView(ExtraCommentsArea);

        jButton1.setText("Cancel");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout CommentsPanelLayout = new javax.swing.GroupLayout(CommentsPanel);
        CommentsPanel.setLayout(CommentsPanelLayout);
        CommentsPanelLayout.setHorizontalGroup(
            CommentsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(CommentsPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(CommentsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 203, Short.MAX_VALUE)
                    .addGroup(CommentsPanelLayout.createSequentialGroup()
                        .addGap(59, 59, 59)
                        .addComponent(CommentsLabel)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        CommentsPanelLayout.setVerticalGroup(
            CommentsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(CommentsPanelLayout.createSequentialGroup()
                .addComponent(jButton1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(CommentsLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 156, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        StyleLabel.setText("Style");

        jLabel2.setText("Extras");

        DryButton.setText("Dry");
        DryButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DryButtonActionPerformed(evt);
            }
        });

        RocksButton.setText("On the Rocks");
        RocksButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RocksButtonActionPerformed(evt);
            }
        });

        RemoveShotButton.setText("Remove Shot");
        RemoveShotButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RemoveShotButtonActionPerformed(evt);
            }
        });

        ExtraShotButton.setText("Extra Shot");
        ExtraShotButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ExtraShotButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout MixedDrinksPanelLayout = new javax.swing.GroupLayout(MixedDrinksPanel);
        MixedDrinksPanel.setLayout(MixedDrinksPanelLayout);
        MixedDrinksPanelLayout.setHorizontalGroup(
            MixedDrinksPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(MixedDrinksPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(MixedDrinksPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(DryButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(RocksButton, javax.swing.GroupLayout.DEFAULT_SIZE, 98, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(MixedDrinksPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(RemoveShotButton, javax.swing.GroupLayout.DEFAULT_SIZE, 98, Short.MAX_VALUE)
                    .addComponent(ExtraShotButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(MixedDrinksPanelLayout.createSequentialGroup()
                .addGap(45, 45, 45)
                .addComponent(StyleLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel2)
                .addGap(60, 60, 60))
        );
        MixedDrinksPanelLayout.setVerticalGroup(
            MixedDrinksPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(MixedDrinksPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(MixedDrinksPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(StyleLabel)
                    .addComponent(jLabel2))
                .addGap(18, 18, 18)
                .addGroup(MixedDrinksPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(DryButton, javax.swing.GroupLayout.DEFAULT_SIZE, 77, Short.MAX_VALUE)
                    .addComponent(RemoveShotButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(MixedDrinksPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(RocksButton, javax.swing.GroupLayout.DEFAULT_SIZE, 77, Short.MAX_VALUE)
                    .addComponent(ExtraShotButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        MargaritaSizeLabel.setText("Margarita Size");

        Margarita16OzButton.setText("16 Oz.");
        Margarita16OzButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Margarita16OzButtonActionPerformed(evt);
            }
        });

        Margarita24OzButton.setText("24 Oz.");
        Margarita24OzButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Margarita24OzButtonActionPerformed(evt);
            }
        });

        BlueRaspberryButton.setText("Blue Raspberry");
        BlueRaspberryButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BlueRaspberryButtonActionPerformed(evt);
            }
        });

        LemonLimeButton.setText("Lemon Lime");
        LemonLimeButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                LemonLimeButtonActionPerformed(evt);
            }
        });

        PinaColodaButton.setText("Pina Coloda");
        PinaColodaButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PinaColodaButtonActionPerformed(evt);
            }
        });

        MargaritaFlavorLabel.setText("Margarita Flavor");

        javax.swing.GroupLayout MargaritaPanelLayout = new javax.swing.GroupLayout(MargaritaPanel);
        MargaritaPanel.setLayout(MargaritaPanelLayout);
        MargaritaPanelLayout.setHorizontalGroup(
            MargaritaPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(MargaritaPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(MargaritaPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(Margarita16OzButton, javax.swing.GroupLayout.PREFERRED_SIZE, 165, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Margarita24OzButton, javax.swing.GroupLayout.PREFERRED_SIZE, 165, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(MargaritaSizeLabel))
                .addGap(18, 18, 18)
                .addGroup(MargaritaPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(MargaritaFlavorLabel)
                    .addComponent(BlueRaspberryButton, javax.swing.GroupLayout.PREFERRED_SIZE, 241, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(PinaColodaButton, javax.swing.GroupLayout.PREFERRED_SIZE, 241, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(LemonLimeButton, javax.swing.GroupLayout.PREFERRED_SIZE, 241, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        MargaritaPanelLayout.setVerticalGroup(
            MargaritaPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(MargaritaPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(MargaritaPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(MargaritaSizeLabel)
                    .addComponent(MargaritaFlavorLabel))
                .addGap(18, 18, 18)
                .addGroup(MargaritaPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(MargaritaPanelLayout.createSequentialGroup()
                        .addComponent(BlueRaspberryButton, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 15, Short.MAX_VALUE)
                        .addComponent(LemonLimeButton, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(PinaColodaButton, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(MargaritaPanelLayout.createSequentialGroup()
                        .addComponent(Margarita16OzButton, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(37, 37, 37)
                        .addComponent(Margarita24OzButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        CurrentItemLabel.setText("Current Item:");

        CurrentItem.setText("jLabel3");

        ItemPriceLabel.setText("Item Price:");

        ItemPrice.setText("jLabel3");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(CurrentItemLabel)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(CurrentItem, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(ItemPriceLabel)
                                .addGap(18, 18, 18)
                                .addComponent(ItemPrice)
                                .addGap(0, 0, Short.MAX_VALUE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(CurrentItemPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(ItemSizePanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(MilkShakeFlavorPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(CoffeeTeaPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(WinePanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(DraftBeerPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(MixedDrinksPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(MargaritaPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(10, 10, 10)
                        .addComponent(CommentsPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
            .addComponent(AddItemButton, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(CurrentItemPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(CurrentItemLabel)
                            .addComponent(CurrentItem))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(ItemPriceLabel)
                            .addComponent(ItemPrice))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(CommentsPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(MargaritaPanel, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(MixedDrinksPanel, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(DraftBeerPanel, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                        .addComponent(WinePanel, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(MilkShakeFlavorPanel, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(CoffeeTeaPanel, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(ItemSizePanel, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(AddItemButton, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void SmallButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SmallButtonActionPerformed
        if(SmallButton.getBackground() == Color.red){
            menuItem.setComments(menuItem.getComments().replace("Small", ""));
            SmallButton.setBackground(defaultColor);
            itemComplete = false;
        }
        else if(MediumButton.getBackground() == Color.red){
            menuItem.setComments(menuItem.getComments().replace("Medium", "Small"));
            SmallButton.setBackground(Color.red);
            MediumButton.setBackground(defaultColor);
            menuItem.setPrice(menuItem.getPrice() - 1.00);
        }
        else if(LargeButton.getBackground() == Color.red) {
            menuItem.setComments(menuItem.getComments().replace("Large", "Small"));
            SmallButton.setBackground(Color.red);
            LargeButton.setBackground(defaultColor);
            menuItem.setPrice(menuItem.getPrice() - 1.50);
        }
        else{
            menuItem.setComments(menuItem.getComments() + "Small");
            SmallButton.setBackground(Color.red);
            itemComplete = true;
        }
        ItemPrice.setText("" + menuItem.getPrice());
        ExtraCommentsArea.setText(menuItem.getComments());
    }//GEN-LAST:event_SmallButtonActionPerformed

    private void MediumButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MediumButtonActionPerformed
        if(MediumButton.getBackground() == Color.red){
            menuItem.setComments(menuItem.getComments().replace("Medium", ""));
            MediumButton.setBackground(defaultColor);
            menuItem.setPrice(menuItem.getPrice() - 1.00);
            itemComplete = false;
        }
        else if(SmallButton.getBackground() == Color.red){
            menuItem.setComments(menuItem.getComments().replace("Small", "Medium"));
            SmallButton.setBackground(defaultColor);
            MediumButton.setBackground(Color.red);
            menuItem.setPrice(menuItem.getPrice() + 1.00);
        }
        else if(LargeButton.getBackground() == Color.red) {
            menuItem.setComments(menuItem.getComments().replace("Large", "Medium"));
            LargeButton.setBackground(defaultColor);
            MediumButton.setBackground(Color.red);
            menuItem.setPrice(menuItem.getPrice() - .50);
        }
        else{
            menuItem.setComments(menuItem.getComments() + "Medium");
            MediumButton.setBackground(Color.red);
            menuItem.setPrice(menuItem.getPrice() + 1.00);
            itemComplete = true;
        }
        ItemPrice.setText("" + menuItem.getPrice());
        ExtraCommentsArea.setText(menuItem.getComments());
    }//GEN-LAST:event_MediumButtonActionPerformed

    private void LargeButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_LargeButtonActionPerformed
        if(LargeButton.getBackground() == Color.red){
            menuItem.setComments(menuItem.getComments().replace("Large", ""));
            LargeButton.setBackground(defaultColor);
            menuItem.setPrice(menuItem.getPrice() - 1.50);
            itemComplete = false;
        }
        else if(SmallButton.getBackground() == Color.red){
            menuItem.setComments(menuItem.getComments().replace("Small", "Large"));
            SmallButton.setBackground(defaultColor);
            LargeButton.setBackground(Color.red);
            menuItem.setPrice(menuItem.getPrice() + 1.50);
        }
        else if(MediumButton.getBackground() == Color.red) {
            menuItem.setComments(menuItem.getComments().replace("Medium", "Large"));
            MediumButton.setBackground(defaultColor);
            LargeButton.setBackground(Color.red);
            menuItem.setPrice(menuItem.getPrice() + .50);
        }
        else{
            menuItem.setComments(menuItem.getComments() + "Large");
            LargeButton.setBackground(Color.red);
            menuItem.setPrice(menuItem.getPrice() + 1.50);
            itemComplete = true;
        }
        ItemPrice.setText("" + menuItem.getPrice());
        ExtraCommentsArea.setText(menuItem.getComments());
    }//GEN-LAST:event_LargeButtonActionPerformed

    private void ChocolateLabelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ChocolateLabelActionPerformed
            
        if(LargeButton.getBackground() == Color.red || MediumButton.getBackground() == Color.red || SmallButton.getBackground() == Color.red){
            if(ChocolateLabel.getBackground() == Color.red){
                ChocolateLabel.setBackground(defaultColor);
                menuItem.setName("Milkshake");
                itemComplete = false;
            }
            else if(VanillaLabel.getBackground() == Color.red){
                ChocolateLabel.setBackground(Color.red);
                VanillaLabel.setBackground(defaultColor);
                menuItem.setName("Chocolate Milkshake");
            }
            else if(StrawberryLabel.getBackground() == Color.red){
                ChocolateLabel.setBackground(Color.red);
                StrawberryLabel.setBackground(defaultColor);
                menuItem.setName("Chocolate Milkshake");
            }
            else{
                ChocolateLabel.setBackground(Color.red);
                menuItem.setName("Chocolate Milkshake");
                itemComplete = true;
            }
        }
        CurrentItem.setText(menuItem.getName());
        ItemPrice.setText("" + menuItem.getPrice());
        ExtraCommentsArea.setText(menuItem.getComments());
    }//GEN-LAST:event_ChocolateLabelActionPerformed

    private void VanillaLabelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_VanillaLabelActionPerformed
        if(LargeButton.getBackground() == Color.red || MediumButton.getBackground() == Color.red || SmallButton.getBackground() == Color.red){
            if(VanillaLabel.getBackground() == Color.red){
                VanillaLabel.setBackground(defaultColor);
                menuItem.setName("Milkshake");
                itemComplete = false;
            }
            else if(ChocolateLabel.getBackground() == Color.red){
                VanillaLabel.setBackground(Color.red);
                ChocolateLabel.setBackground(defaultColor);
                menuItem.setName("Vanilla Milkshake");
            }
            else if(StrawberryLabel.getBackground() == Color.red){
                VanillaLabel.setBackground(Color.red);
                StrawberryLabel.setBackground(defaultColor);
                menuItem.setName("Vanilla Milkshake");
            }
            else{
                VanillaLabel.setBackground(Color.red);
                menuItem.setName("Vanilla Milkshake");
                itemComplete = true;
            }
        }
        CurrentItem.setText(menuItem.getName());
        ItemPrice.setText("" + menuItem.getPrice());
        ExtraCommentsArea.setText(menuItem.getComments());
    }//GEN-LAST:event_VanillaLabelActionPerformed

    private void StrawberryLabelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_StrawberryLabelActionPerformed
        if(LargeButton.getBackground() == Color.red || MediumButton.getBackground() == Color.red || SmallButton.getBackground() == Color.red){
            if(StrawberryLabel.getBackground() == Color.red){
                StrawberryLabel.setBackground(defaultColor);
                menuItem.setName("Milkshake");
                itemComplete = false;
            }
            else if(ChocolateLabel.getBackground() == Color.red){
                StrawberryLabel.setBackground(Color.red);
                ChocolateLabel.setBackground(defaultColor);
                menuItem.setName("Strawberry Milkshake");
            }
            else if(VanillaLabel.getBackground() == Color.red){
                StrawberryLabel.setBackground(Color.red);
                VanillaLabel.setBackground(defaultColor);
                menuItem.setName("Strawberry Milkshake");
            }
            else{
                StrawberryLabel.setBackground(Color.red);
                menuItem.setName("Strawberry Milkshake");
                itemComplete = true;
            }
        }
        CurrentItem.setText(menuItem.getName());
        ItemPrice.setText("" + menuItem.getPrice());
        ExtraCommentsArea.setText(menuItem.getComments());
    }//GEN-LAST:event_StrawberryLabelActionPerformed

    private void SkimMilkButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SkimMilkButtonActionPerformed
        if(SkimMilkButton.getBackground() == Color.red){
            SkimMilkButton.setBackground(defaultColor);
            menuItem.setComments(menuItem.getComments().replace("Skim Milk \n", ""));
        }
        else if(HalfnHalfButton.getBackground() == Color.red){
            HalfnHalfButton.setBackground(defaultColor);
            SkimMilkButton.setBackground(Color.red);
            menuItem.setComments(menuItem.getComments().replace("Half & Half \n", "Skim Milk \n"));
        }
        else if(FullMilkButton.getBackground() == Color.red){
            FullMilkButton.setBackground(defaultColor);
            SkimMilkButton.setBackground(Color.red);
            menuItem.setComments(menuItem.getComments().replace("Full Milk \n", "Skim Milk \n"));
        }
        else{
            SkimMilkButton.setBackground(Color.red);
            menuItem.setComments(menuItem.getComments() + "Skim Milk \n");
        }
        ItemPrice.setText("" + menuItem.getPrice());
        ExtraCommentsArea.setText(menuItem.getComments());
    }//GEN-LAST:event_SkimMilkButtonActionPerformed

    private void HalfnHalfButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_HalfnHalfButtonActionPerformed
        if(HalfnHalfButton.getBackground() == Color.red){
            HalfnHalfButton.setBackground(defaultColor);
            menuItem.setComments(menuItem.getComments().replace("Half & Half \n", ""));
        }
        else if(SkimMilkButton.getBackground() == Color.red){
            SkimMilkButton.setBackground(defaultColor);
            HalfnHalfButton.setBackground(Color.red);
            menuItem.setComments(menuItem.getComments().replace("Skim Milk \n", "Half & Half \n"));
        }
        else if(FullMilkButton.getBackground() == Color.red){
            FullMilkButton.setBackground(defaultColor);
            HalfnHalfButton.setBackground(Color.red);
            menuItem.setComments(menuItem.getComments().replace("Full Milk \n", "Half & Half \n"));
        }
        else{
            HalfnHalfButton.setBackground(Color.red);
            menuItem.setComments(menuItem.getComments() + "Half & Half \n");
        }
        ItemPrice.setText("" + menuItem.getPrice());
        ExtraCommentsArea.setText(menuItem.getComments());
    }//GEN-LAST:event_HalfnHalfButtonActionPerformed

    private void FullMilkButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_FullMilkButtonActionPerformed
        if(FullMilkButton.getBackground() == Color.red){
            FullMilkButton.setBackground(defaultColor);
            menuItem.setComments(menuItem.getComments().replace("Full Milk \n", ""));
        }
        else if(SkimMilkButton.getBackground() == Color.red){
            SkimMilkButton.setBackground(defaultColor);
            FullMilkButton.setBackground(Color.red);
            menuItem.setComments(menuItem.getComments().replace("Skim Milk \n", "Full Milk \n"));
        }
        else if(HalfnHalfButton.getBackground() == Color.red){
            HalfnHalfButton.setBackground(defaultColor);
            FullMilkButton.setBackground(Color.red);
            menuItem.setComments(menuItem.getComments().replace("Half & Half \n", "Full Milk \n"));
        }
        else{
            FullMilkButton.setBackground(Color.red);
            menuItem.setComments(menuItem.getComments() + "Full Milk \n");
        }
        ItemPrice.setText("" + menuItem.getPrice());
        ExtraCommentsArea.setText(menuItem.getComments());
    }//GEN-LAST:event_FullMilkButtonActionPerformed

    private void SplendaButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SplendaButtonActionPerformed

            if(SugarButton.getBackground() == Color.red){
                menuItem.setComments(menuItem.getComments().replace("Sugar \n", "Splenda \n"));
                SugarButton.setBackground(defaultColor);
                SplendaButton.setBackground(Color.red);
            }
            else if(SplendaButton.getBackground() == Color.red){
                menuItem.setComments(menuItem.getComments().replace("Splenda \n", ""));
                SplendaButton.setBackground(defaultColor);
                itemComplete = false;
            }
            else{
                menuItem.setComments(menuItem.getComments() + "Splenda \n");
                SplendaButton.setBackground(Color.red);
                itemComplete = true;
        }
            ItemPrice.setText("" + menuItem.getPrice());
        ExtraCommentsArea.setText(menuItem.getComments());
    }//GEN-LAST:event_SplendaButtonActionPerformed

    private void SugarButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SugarButtonActionPerformed

            if(SplendaButton.getBackground() == Color.red){
                menuItem.setComments(menuItem.getComments().replace("Splenda \n", "Sugar \n"));
                SplendaButton.setBackground(defaultColor);
                SugarButton.setBackground(Color.red);
            }
            else if(SugarButton.getBackground() == Color.red){
                menuItem.setComments(menuItem.getComments().replace("Sugar \n", ""));
                SugarButton.setBackground(defaultColor);
                itemComplete = false;
            }
            else{
                menuItem.setComments(menuItem.getComments() + "Sugar \n");
                SugarButton.setBackground(Color.red);
                itemComplete = true;
        }
            ItemPrice.setText("" + menuItem.getPrice());
        ExtraCommentsArea.setText(menuItem.getComments());
    }//GEN-LAST:event_SugarButtonActionPerformed

    private void TruthButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TruthButtonActionPerformed
        menuItem.setName("Draft Truth");
        if(TruthButton.getBackground() != Color.red){
            TruthButton.setBackground(Color.red);
            BudlightButton.setBackground(defaultColor);
            BlueMoonButton.setBackground(defaultColor);
            MillerLiteButton.setBackground(defaultColor);
        }
        else{
            TruthButton.setBackground(defaultColor);
            menuItem.setName("Draft");
        }
        CurrentItem.setText(menuItem.getName());
        ItemPrice.setText("" + menuItem.getPrice());
        ExtraCommentsArea.setText(menuItem.getComments());
    }//GEN-LAST:event_TruthButtonActionPerformed

    private void largeOzButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_largeOzButtonActionPerformed
        if(menuItem.getComments().contains("16 OZ")){
            menuItem.setComments(menuItem.getComments().replace("16 OZ", "24 OZ"));
            menuItem.setPrice(menuItem.getPrice() + 2.00);
        }
        else if(!menuItem.getComments().contains("OZ") && menuItem.getName().contains("Draft")){
            menuItem.setComments(menuItem.getComments() + "24 OZ");
            menuItem.setPrice(menuItem.getPrice() + 2.00);
        }
        else{
            menuItem.setComments(menuItem.getComments().replace("24 OZ", ""));
        }
        
        if(largeOzButton.getBackground() == Color.red){
            largeOzButton.setBackground(defaultColor);
            menuItem.setPrice(menuItem.getPrice() - 2.00);
            itemComplete = false;
        }
        else if(menuItem.getName().contains("Draft ")){
            largeOzButton.setBackground(Color.red);
            SmallOzButton.setBackground(defaultColor);
            itemComplete = true;
        }
        ItemPrice.setText("" + menuItem.getPrice());
        ExtraCommentsArea.setText(menuItem.getComments());
    }//GEN-LAST:event_largeOzButtonActionPerformed

    private void SmallOzButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SmallOzButtonActionPerformed
        if(menuItem.getComments().contains("24 OZ")){
            menuItem.setComments(menuItem.getComments().replace("24 OZ", "16 OZ"));
            menuItem.setPrice(menuItem.getPrice() - 2.00);
        }
        else if(!menuItem.getComments().contains("OZ") && menuItem.getName().contains("Draft")){
            menuItem.setComments(menuItem.getComments() + "16 OZ");
        }
        else{
            menuItem.setComments(menuItem.getComments().replace("16 OZ", ""));
        }
        
        if(SmallOzButton.getBackground() == Color.red){
            SmallOzButton.setBackground(defaultColor);
            itemComplete = false;
        }
        else if(menuItem.getName().contains("Draft ")){
            SmallOzButton.setBackground(Color.red);
            largeOzButton.setBackground(defaultColor);
            itemComplete = true;
        }
        ItemPrice.setText("" + menuItem.getPrice());
        ExtraCommentsArea.setText(menuItem.getComments());
    }//GEN-LAST:event_SmallOzButtonActionPerformed

    private void BudlightButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BudlightButtonActionPerformed
        menuItem.setName("Draft Budlight");
        if(BudlightButton.getBackground() != Color.red){
            BudlightButton.setBackground(Color.red);
            TruthButton.setBackground(defaultColor);
            BlueMoonButton.setBackground(defaultColor);
            MillerLiteButton.setBackground(defaultColor);
        }
        else{
            BudlightButton.setBackground(defaultColor);
            menuItem.setName("Draft");
        }
        CurrentItem.setText(menuItem.getName());  
        ItemPrice.setText("" + menuItem.getPrice());
        ExtraCommentsArea.setText(menuItem.getComments());
    }//GEN-LAST:event_BudlightButtonActionPerformed

    private void BlueMoonButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BlueMoonButtonActionPerformed
        menuItem.setName("Draft Blue Moon");
        if(BlueMoonButton.getBackground() != Color.red){
            BlueMoonButton.setBackground(Color.red);
            BudlightButton.setBackground(defaultColor);
            TruthButton.setBackground(defaultColor);
            MillerLiteButton.setBackground(defaultColor);
        }
        else{
            BlueMoonButton.setBackground(defaultColor);
            menuItem.setName("Draft");
        }
        CurrentItem.setText(menuItem.getName());
        ItemPrice.setText("" + menuItem.getPrice());
        ExtraCommentsArea.setText(menuItem.getComments());
    }//GEN-LAST:event_BlueMoonButtonActionPerformed

    private void MillerLiteButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MillerLiteButtonActionPerformed
        menuItem.setName("Draft Miller Lite");
        if(MillerLiteButton.getBackground() != Color.red){
            MillerLiteButton.setBackground(Color.red);
            BudlightButton.setBackground(defaultColor);
            BlueMoonButton.setBackground(defaultColor);
            TruthButton.setBackground(defaultColor);
        }
        else{
            MillerLiteButton.setBackground(defaultColor);
            menuItem.setName("Draft");
        }
        CurrentItem.setText(menuItem.getName());
        ItemPrice.setText("" + menuItem.getPrice());
        ExtraCommentsArea.setText(menuItem.getComments());
    }//GEN-LAST:event_MillerLiteButtonActionPerformed

    private void AddItemButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AddItemButtonActionPerformed
        if(itemComplete){
            customerOrder.addMenuItem(menuItem);
            mainFrame.setNewPanel(new NewOrderPanel(mainFrame, customerOrder), false, this);
        }
    }//GEN-LAST:event_AddItemButtonActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        mainFrame.setNewPanel(mainFrame.getLastPage(), false, this);
    }//GEN-LAST:event_jButton1ActionPerformed

    private void WhiteWineButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_WhiteWineButtonActionPerformed
        menuItem.setName("White Wine");
        if(WhiteWineButton.getBackground() != Color.red){
            WhiteWineButton.setBackground(Color.red);
            RedWineButton.setBackground(defaultColor);
            PinkWineButton.setBackground(defaultColor);
        }
        else{
            WhiteWineButton.setBackground(defaultColor);
            menuItem.setName("Wine");
        }
        CurrentItem.setText(menuItem.getName());
        ItemPrice.setText("" + menuItem.getPrice());
        ExtraCommentsArea.setText(menuItem.getComments());
    }//GEN-LAST:event_WhiteWineButtonActionPerformed

    private void RedWineButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RedWineButtonActionPerformed
        menuItem.setName("Red Wine");
        if(RedWineButton.getBackground() != Color.red){
            RedWineButton.setBackground(Color.red);
            WhiteWineButton.setBackground(defaultColor);
            PinkWineButton.setBackground(defaultColor);
        }
        else{
            RedWineButton.setBackground(defaultColor);
            menuItem.setName("Wine");
        }
        CurrentItem.setText(menuItem.getName());
        ItemPrice.setText("" + menuItem.getPrice());
        ExtraCommentsArea.setText(menuItem.getComments());
    }//GEN-LAST:event_RedWineButtonActionPerformed

    private void PinkWineButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PinkWineButtonActionPerformed
        menuItem.setName("Pink Wine");
        if(PinkWineButton.getBackground() != Color.red){
            PinkWineButton.setBackground(Color.red);
            RedWineButton.setBackground(defaultColor);
            WhiteWineButton.setBackground(defaultColor);
        }
        else{
            PinkWineButton.setBackground(defaultColor);
            menuItem.setName("Wine");
        }
        CurrentItem.setText(menuItem.getName());
        ItemPrice.setText("" + menuItem.getPrice());
        ExtraCommentsArea.setText(menuItem.getComments());
    }//GEN-LAST:event_PinkWineButtonActionPerformed

    private void GlassButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_GlassButtonActionPerformed
        if(menuItem.getComments().contains("Bottle")){
            menuItem.setComments(menuItem.getComments().replace("Bottle", "Glass"));
            menuItem.setPrice(menuItem.getPrice() - 10.00);
        }
        else if(menuItem.getComments().contains("Glass")){
            menuItem.setComments(menuItem.getComments().replace("Glass", ""));
        }
        else{
            menuItem.setComments(menuItem.getComments() + "Glass");
        }
        
        if(GlassButton.getBackground() == Color.red){
            GlassButton.setBackground(defaultColor);
            itemComplete = false;
        }
        else if(menuItem.getName().contains(" Wine")){
            GlassButton.setBackground(Color.red);
            BottleButton.setBackground(defaultColor);
            itemComplete = true;
        }
        ItemPrice.setText("" + menuItem.getPrice());
        ExtraCommentsArea.setText(menuItem.getComments());
    }//GEN-LAST:event_GlassButtonActionPerformed

    private void BottleButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BottleButtonActionPerformed
        if(menuItem.getComments().contains("Glass")){
            menuItem.setComments(menuItem.getComments().replace("Glass", "Bottle"));
            menuItem.setPrice(menuItem.getPrice() + 10.00);
        }
        else if(menuItem.getComments().contains("Bottle")){
            menuItem.setComments(menuItem.getComments().replace("Bottle", ""));
            menuItem.setPrice(menuItem.getPrice() - 10.00);
        }
        else{
            menuItem.setComments(menuItem.getComments() + "Bottle");
            menuItem.setPrice(menuItem.getPrice() + 10.00);
        }
        
        if(BottleButton.getBackground() == Color.red){
            BottleButton.setBackground(defaultColor);
            itemComplete = false;
        }
        else if(menuItem.getName().contains(" Wine")){
            BottleButton.setBackground(Color.red);
            GlassButton.setBackground(defaultColor);
            itemComplete = true;
        }
        ItemPrice.setText("" + menuItem.getPrice());
        ExtraCommentsArea.setText(menuItem.getComments());
    }//GEN-LAST:event_BottleButtonActionPerformed

    private void Margarita24OzButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Margarita24OzButtonActionPerformed
        if(Margarita24OzButton.getBackground() == Color.red){
            Margarita24OzButton.setBackground(defaultColor);
            menuItem.setComments(menuItem.getComments().replace("24 Oz. \n", ""));
            menuItem.setPrice(menuItem.getPrice() - 3.00);
            itemComplete = false;
            if(BlueRaspberryButton.getBackground() == Color.red){
                BlueRaspberryButton.setBackground(defaultColor);
                menuItem.setComments(menuItem.getComments().replace("Blue Raspberry \n", ""));
            }
            else if(LemonLimeButton.getBackground() == Color.red){
                LemonLimeButton.setBackground(defaultColor);
                menuItem.setComments(menuItem.getComments().replace("Lemon Lime \n", ""));
            }
            else if(PinaColodaButton.getBackground() == Color.red){
                PinaColodaButton.setBackground(defaultColor);
                menuItem.setComments(menuItem.getComments().replace("Pina Coloda \n", ""));
            }
        }
        else if(Margarita16OzButton.getBackground() == Color.red){
            Margarita16OzButton.setBackground(defaultColor);
            Margarita24OzButton.setBackground(Color.red);
            menuItem.setComments(menuItem.getComments().replace("16 Oz. \n", "24 Oz. \n"));
            menuItem.setPrice(menuItem.getPrice() + 3.00);
        }
        else{
            Margarita24OzButton.setBackground(Color.red);
            menuItem.setComments(menuItem.getComments() + "24 Oz. \n");
            menuItem.setPrice(menuItem.getPrice() + 3.00);
        }
        ItemPrice.setText("" + menuItem.getPrice());
        ExtraCommentsArea.setText(menuItem.getComments());
    }//GEN-LAST:event_Margarita24OzButtonActionPerformed

    private void Margarita16OzButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Margarita16OzButtonActionPerformed
        if(Margarita16OzButton.getBackground() == Color.red){
            Margarita16OzButton.setBackground(defaultColor);
            menuItem.setComments(menuItem.getComments().replace("16 Oz. \n", ""));
            itemComplete = false;
            if(BlueRaspberryButton.getBackground() == Color.red){
                BlueRaspberryButton.setBackground(defaultColor);
                menuItem.setComments(menuItem.getComments().replace("Blue Raspberry \n", ""));
            }
            else if(LemonLimeButton.getBackground() == Color.red){
                LemonLimeButton.setBackground(defaultColor);
                menuItem.setComments(menuItem.getComments().replace("Lemon Lime \n", ""));
            }
            else if(PinaColodaButton.getBackground() == Color.red){
                PinaColodaButton.setBackground(defaultColor);
                menuItem.setComments(menuItem.getComments().replace("Pina Coloda \n", ""));
            }
        }
        else if(Margarita24OzButton.getBackground() == Color.red){
            Margarita24OzButton.setBackground(defaultColor);
            Margarita16OzButton.setBackground(Color.red);
            menuItem.setComments(menuItem.getComments().replace("24 Oz. \n", "16 Oz. \n"));
            menuItem.setPrice(menuItem.getPrice() - 3.00);
        }
        else{
            Margarita16OzButton.setBackground(Color.red);
            menuItem.setComments(menuItem.getComments() + "16 Oz. \n");
        }
        ItemPrice.setText("" + menuItem.getPrice());
        ExtraCommentsArea.setText(menuItem.getComments());
    }//GEN-LAST:event_Margarita16OzButtonActionPerformed

    private void BlueRaspberryButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BlueRaspberryButtonActionPerformed
        if(Margarita16OzButton.getBackground() == Color.red || Margarita24OzButton.getBackground() == Color.red){
            if(BlueRaspberryButton.getBackground() == Color.red){
                BlueRaspberryButton.setBackground(defaultColor);
                menuItem.setComments(menuItem.getComments().replace("Blue Raspberry \n", ""));
                itemComplete = false;
            }
            else if(LemonLimeButton.getBackground() == Color.red){
                LemonLimeButton.setBackground(defaultColor);
                BlueRaspberryButton.setBackground(Color.red);
                menuItem.setComments(menuItem.getComments().replace("Lemon Lime \n", "Blue Raspberry \n"));
            }
            else if(PinaColodaButton.getBackground() == Color.red){
                PinaColodaButton.setBackground(defaultColor);
                BlueRaspberryButton.setBackground(Color.red);
                menuItem.setComments(menuItem.getComments().replace("Pina Coloda \n" , "Blue Raspberry \n"));
            }
            else{
                BlueRaspberryButton.setBackground(Color.red);
                menuItem.setComments(menuItem.getComments() + "Blue Raspberry \n");
                itemComplete = true;
            }
        }
        ItemPrice.setText("" + menuItem.getPrice());
        ExtraCommentsArea.setText(menuItem.getComments());
    }//GEN-LAST:event_BlueRaspberryButtonActionPerformed

    private void LemonLimeButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_LemonLimeButtonActionPerformed
        if(Margarita16OzButton.getBackground() == Color.red || Margarita24OzButton.getBackground() == Color.red){
            if(LemonLimeButton.getBackground() == Color.red){
                LemonLimeButton.setBackground(defaultColor);
                menuItem.setComments(menuItem.getComments().replace("Lemon Lime \n", ""));
                itemComplete = false;
            }
            else if(BlueRaspberryButton.getBackground() == Color.red){
                BlueRaspberryButton.setBackground(defaultColor);
                LemonLimeButton.setBackground(Color.red);
                menuItem.setComments(menuItem.getComments().replace("Blue Raspberry \n", "Lemon Lime \n"));
            }
            else if(PinaColodaButton.getBackground() == Color.red){
                PinaColodaButton.setBackground(defaultColor);
                LemonLimeButton.setBackground(Color.red);
                menuItem.setComments(menuItem.getComments().replace("Pina Coloda \n" , "Lemon Lime \n"));
            }
            else{
                LemonLimeButton.setBackground(Color.red);
                menuItem.setComments(menuItem.getComments() + "Lemon Lime \n");
                itemComplete = true;
            }
        }
        ItemPrice.setText("" + menuItem.getPrice());
        ExtraCommentsArea.setText(menuItem.getComments());
    }//GEN-LAST:event_LemonLimeButtonActionPerformed

    private void PinaColodaButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PinaColodaButtonActionPerformed
        if(Margarita16OzButton.getBackground() == Color.red || Margarita24OzButton.getBackground() == Color.red){
            if(PinaColodaButton.getBackground() == Color.red){
                PinaColodaButton.setBackground(defaultColor);
                menuItem.setComments(menuItem.getComments().replace("Pina Coloda \n", ""));
                itemComplete = false;
            }
            else if(LemonLimeButton.getBackground() == Color.red){
                LemonLimeButton.setBackground(defaultColor);
                PinaColodaButton.setBackground(Color.red);
                menuItem.setComments(menuItem.getComments().replace("Lemon Lime \n", "Pina Coloda \n"));
            }
            else if(BlueRaspberryButton.getBackground() == Color.red){
                BlueRaspberryButton.setBackground(defaultColor);
                PinaColodaButton.setBackground(Color.red);
                menuItem.setComments(menuItem.getComments().replace("Blue Raspberry \n", "Pina Coloda \n"));
            }
            else{
                PinaColodaButton.setBackground(Color.red);
                menuItem.setComments(menuItem.getComments() + "Pina Coloda \n");
                itemComplete = true;
            }
        }
        ItemPrice.setText("" + menuItem.getPrice());
        ExtraCommentsArea.setText(menuItem.getComments());
    }//GEN-LAST:event_PinaColodaButtonActionPerformed

    private void DryButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DryButtonActionPerformed
        if(DryButton.getBackground() == Color.red){
            DryButton.setBackground(defaultColor);
            menuItem.setComments(menuItem.getComments().replace("Dry \n", ""));
            itemComplete = false;
        }
        else if(RocksButton.getBackground() == Color.red){
            RocksButton.setBackground(defaultColor);
            DryButton.setBackground(Color.red);
            menuItem.setComments(menuItem.getComments().replace("On the Rocks \n", "Dry \n"));
        }
        else{
            DryButton.setBackground(Color.red);
            menuItem.setComments(menuItem.getComments() + "Dry \n");
            itemComplete = true;
        }
        ExtraCommentsArea.setText(menuItem.getComments());
    }//GEN-LAST:event_DryButtonActionPerformed

    private void RocksButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RocksButtonActionPerformed
        if(RocksButton.getBackground() == Color.red){
            RocksButton.setBackground(defaultColor);
            menuItem.setComments(menuItem.getComments().replace("On the Rocks \n", ""));
            itemComplete = false;
        }
        else if(DryButton.getBackground() == Color.red){
            DryButton.setBackground(defaultColor);
            RocksButton.setBackground(Color.red);
            menuItem.setComments(menuItem.getComments().replace("Dry \n", "On the Rocks \n"));
        }
        else{
            RocksButton.setBackground(Color.red);
            menuItem.setComments(menuItem.getComments() + "On the Rocks \n");
            itemComplete = true;
        }
        ExtraCommentsArea.setText(menuItem.getComments());
    }//GEN-LAST:event_RocksButtonActionPerformed

    private void RemoveShotButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RemoveShotButtonActionPerformed
        if(menuItem.getComments().contains("Extra Shot")){
            menuItem.setComments(menuItem.getComments().replaceFirst("Extra Shot \n", ""));
            menuItem.setPrice(menuItem.getPrice() - 3.00);
            ItemPrice.setText("" + menuItem.getPrice());
            ExtraCommentsArea.setText(menuItem.getComments());
        }
    }//GEN-LAST:event_RemoveShotButtonActionPerformed

    private void ExtraShotButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ExtraShotButtonActionPerformed
        menuItem.setComments(menuItem.getComments() + "Extra Shot \n");
        menuItem.setPrice(menuItem.getPrice() + 3.00);
        ItemPrice.setText("" + menuItem.getPrice());
        ExtraCommentsArea.setText(menuItem.getComments());
    }//GEN-LAST:event_ExtraShotButtonActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton AddItemButton;
    private javax.swing.JButton BlueMoonButton;
    private javax.swing.JButton BlueRaspberryButton;
    private javax.swing.JButton BottleButton;
    private javax.swing.JButton BudlightButton;
    private javax.swing.JButton ChocolateLabel;
    private javax.swing.JLabel CoffeeTeaLabel;
    private javax.swing.JPanel CoffeeTeaPanel;
    private javax.swing.JLabel CommentsLabel;
    private javax.swing.JPanel CommentsPanel;
    private javax.swing.JLabel CurrentItem;
    private javax.swing.JLabel CurrentItemLabel;
    private javax.swing.JPanel CurrentItemPanel;
    private javax.swing.JLabel DraftBeerLabel;
    private javax.swing.JPanel DraftBeerPanel;
    private javax.swing.JLabel DraftSizeLabel;
    private javax.swing.JButton DryButton;
    private javax.swing.JTextArea ExtraCommentsArea;
    private javax.swing.JButton ExtraShotButton;
    private javax.swing.JButton FullMilkButton;
    private javax.swing.JButton GlassButton;
    private javax.swing.JButton HalfnHalfButton;
    private javax.swing.JLabel ItemPrice;
    private javax.swing.JLabel ItemPriceLabel;
    private javax.swing.JLabel ItemSizeLabel;
    private javax.swing.JPanel ItemSizePanel;
    private javax.swing.JButton LargeButton;
    private javax.swing.JButton LemonLimeButton;
    private javax.swing.JButton Margarita16OzButton;
    private javax.swing.JButton Margarita24OzButton;
    private javax.swing.JLabel MargaritaFlavorLabel;
    private javax.swing.JPanel MargaritaPanel;
    private javax.swing.JLabel MargaritaSizeLabel;
    private javax.swing.JButton MediumButton;
    private javax.swing.JPanel MilkShakeFlavorPanel;
    private javax.swing.JLabel MilkShakeLabel;
    private javax.swing.JButton MillerLiteButton;
    private javax.swing.JPanel MixedDrinksPanel;
    private javax.swing.JButton PinaColodaButton;
    private javax.swing.JButton PinkWineButton;
    private javax.swing.JButton RedWineButton;
    private javax.swing.JButton RemoveShotButton;
    private javax.swing.JButton RocksButton;
    private javax.swing.JLabel SizeLabel;
    private javax.swing.JButton SkimMilkButton;
    private javax.swing.JButton SmallButton;
    private javax.swing.JButton SmallOzButton;
    private javax.swing.JButton SplendaButton;
    private javax.swing.JButton StrawberryLabel;
    private javax.swing.JLabel StyleLabel;
    private javax.swing.JButton SugarButton;
    private javax.swing.JButton TruthButton;
    private javax.swing.JButton VanillaLabel;
    private javax.swing.JButton WhiteWineButton;
    private javax.swing.JPanel WinePanel;
    private javax.swing.JLabel WineSelectionLabel;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton largeOzButton;
    // End of variables declaration//GEN-END:variables
}
