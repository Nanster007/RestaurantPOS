package possystem;

import possystem.menuitems.MenuItem;
import java.awt.Color;
import java.awt.event.ActionEvent;
import java.util.ArrayList;
import java.util.List;
import java.util.UUID;
import possystem.menuitems.MenuItemOption;
import possystem.menuitems.Topping;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
/**
 *
 * @author tylar
 */
public class MenuItemDetailsPanel extends CustomPanel {

    MenuItem menuItem;
    CustomerOrder customerOrder;
    Color defaultColor;
    MainFrame mainFrame;
    Boolean itemComplete;
    private List<MenuItemOptionPanel> optionPanels;

    public MenuItemDetailsPanel(MainFrame mainFrame, MenuItem menuItem, CustomerOrder customerOrder) {
        initComponents();
        this.menuItem = menuItem;
        this.customerOrder = customerOrder;
        this.mainFrame = mainFrame;
        this.itemComplete = false;

        initialize();
    }

    private void initialize() {
        defaultColor = null;
        this.optionPanels = new ArrayList();

        CurrentItemLabel.setText(menuItem.getName());
        BasePriceLabel.setText(String.format("$%.2f", menuItem.getBasePrice()));

        this.ExtraCommentsArea.setText(menuItem.getComments());

        initializeOptions();
        initializeToppings();
        updateAddItemButton();
    }

    private void initializeOptions() {
        List<MenuItemOption> options = menuItem.getOptions();

        if (options.size() > 0) {
            MenuItemOptionsPanel.remove(NoOptionsLabel);

            for (int i = 0; i < options.size(); i++) {
                MenuItemOption option = options.get(i);

                MenuItemOptionPanel newPanel = new MenuItemOptionPanel(option, i, option.getDefaultValue());
                this.MenuItemOptionsPanel.add(newPanel);
                this.optionPanels.add(newPanel);

                ArrayList<OptionValueToggleButton> buttons = newPanel.getButtons();

                buttons.forEach(button -> {
                    button.addActionListener(evt -> {
                        onOptionStatusChange(evt);
                    });
                });
            }
        }
    }

    public void onOptionStatusChange(ActionEvent evt) {
        updateAddItemButton();
    }

    private void initializeToppings() {
        List<UUID> toppingIds = this.menuItem.getPossibleToppings();

        for (var toppingId : toppingIds) {
            MenuItem topping = this.mainFrame.getToppingMenu().getMenuItem(toppingId);
            this.ToppingsPanel.add(new ToppingPanel());
        }
    }

    private void updateAddItemButton() {
        if (this.optionPanels.isEmpty()) {
            return;
        }

        boolean shouldEnableButton = true;

        for (MenuItemOptionPanel optionPanel : optionPanels) {
            if (optionPanel.getOption().isRequired() && !optionPanel.isSelected()) {
                shouldEnableButton = false;
                break;
            }
        }

        this.AddItemButton.setEnabled(shouldEnableButton);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        CurrentItemPanel = new javax.swing.JPanel();
        CurrentItemTextLabel = new javax.swing.JLabel();
        CurrentItemLabel = new javax.swing.JLabel();
        BasePriceTextLabel = new javax.swing.JLabel();
        BasePriceLabel = new javax.swing.JLabel();
        CancelButton = new javax.swing.JButton();
        AddItemButton = new javax.swing.JButton();
        CommentsPanel = new javax.swing.JPanel();
        CommentsLabel = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        ExtraCommentsArea = new javax.swing.JTextArea();
        ToppingsPanel = new javax.swing.JPanel();
        MenuItemOptionsPanel = new javax.swing.JPanel();
        NoOptionsLabel = new javax.swing.JLabel();

        setLayout(new java.awt.BorderLayout());

        CurrentItemPanel.addAncestorListener(new javax.swing.event.AncestorListener() {
            public void ancestorAdded(javax.swing.event.AncestorEvent evt) {
                CurrentItemPanelAncestorAdded(evt);
            }
            public void ancestorMoved(javax.swing.event.AncestorEvent evt) {
            }
            public void ancestorRemoved(javax.swing.event.AncestorEvent evt) {
            }
        });

        CurrentItemTextLabel.setText("Current Item:");

        CurrentItemLabel.setText("jLabel3");

        BasePriceTextLabel.setText("Base Price:");

        BasePriceLabel.setText("jLabel3");

        CancelButton.setText("Cancel");
        CancelButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CancelButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout CurrentItemPanelLayout = new javax.swing.GroupLayout(CurrentItemPanel);
        CurrentItemPanel.setLayout(CurrentItemPanelLayout);
        CurrentItemPanelLayout.setHorizontalGroup(
            CurrentItemPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(CurrentItemPanelLayout.createSequentialGroup()
                .addGroup(CurrentItemPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(CurrentItemPanelLayout.createSequentialGroup()
                        .addGap(12, 12, 12)
                        .addComponent(CurrentItemTextLabel)
                        .addGap(6, 6, 6)
                        .addComponent(CurrentItemLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(CurrentItemPanelLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(BasePriceTextLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(BasePriceLabel)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(CancelButton, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        CurrentItemPanelLayout.setVerticalGroup(
            CurrentItemPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(CurrentItemPanelLayout.createSequentialGroup()
                .addGroup(CurrentItemPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(CurrentItemPanelLayout.createSequentialGroup()
                        .addGap(12, 12, 12)
                        .addGroup(CurrentItemPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(CurrentItemTextLabel)
                            .addComponent(CurrentItemLabel))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(CurrentItemPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(BasePriceTextLabel)
                            .addComponent(BasePriceLabel)))
                    .addGroup(CurrentItemPanelLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(CancelButton, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(0, 0, 0))
        );

        add(CurrentItemPanel, java.awt.BorderLayout.NORTH);

        AddItemButton.setText("Add Item");
        AddItemButton.setEnabled(false);
        AddItemButton.setMaximumSize(new java.awt.Dimension(66, 66));
        AddItemButton.setMinimumSize(new java.awt.Dimension(66, 66));
        AddItemButton.setPreferredSize(new java.awt.Dimension(66, 66));
        AddItemButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AddItemButtonActionPerformed(evt);
            }
        });
        add(AddItemButton, java.awt.BorderLayout.PAGE_END);

        CommentsPanel.setLayout(new java.awt.BorderLayout());

        CommentsLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        CommentsLabel.setText("Extra Comments");
        CommentsPanel.add(CommentsLabel, java.awt.BorderLayout.PAGE_START);

        ExtraCommentsArea.setEditable(false);
        ExtraCommentsArea.setColumns(20);
        ExtraCommentsArea.setLineWrap(true);
        ExtraCommentsArea.setRows(5);
        ExtraCommentsArea.setWrapStyleWord(true);
        jScrollPane1.setViewportView(ExtraCommentsArea);

        CommentsPanel.add(jScrollPane1, java.awt.BorderLayout.CENTER);

        add(CommentsPanel, java.awt.BorderLayout.EAST);

        ToppingsPanel.setLayout(new java.awt.GridLayout());
        add(ToppingsPanel, java.awt.BorderLayout.CENTER);

        MenuItemOptionsPanel.setBorder(javax.swing.BorderFactory.createTitledBorder(""));
        MenuItemOptionsPanel.setLayout(new java.awt.GridLayout(0, 1, 12, 12));

        NoOptionsLabel.setFont(NoOptionsLabel.getFont().deriveFont((NoOptionsLabel.getFont().getStyle() | java.awt.Font.ITALIC)));
        NoOptionsLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        NoOptionsLabel.setText("No Options");
        NoOptionsLabel.setBorder(javax.swing.BorderFactory.createTitledBorder("Options"));
        NoOptionsLabel.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        MenuItemOptionsPanel.add(NoOptionsLabel);

        add(MenuItemOptionsPanel, java.awt.BorderLayout.WEST);
    }// </editor-fold>//GEN-END:initComponents

    private void AddItemButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AddItemButtonActionPerformed
        if (itemComplete) {
            //customerOrder.addMenuItem(menuItem);
            mainFrame.setNewPanel(new NewOrderPanel(mainFrame, customerOrder), false, this);
        }
    }//GEN-LAST:event_AddItemButtonActionPerformed

    private void CancelButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CancelButtonActionPerformed
        mainFrame.setNewPanel(mainFrame.getLastPage(), false, this);
    }//GEN-LAST:event_CancelButtonActionPerformed

    private void CurrentItemPanelAncestorAdded(javax.swing.event.AncestorEvent evt) {//GEN-FIRST:event_CurrentItemPanelAncestorAdded
        // TODO add your hanasdfsadfas
    }//GEN-LAST:event_CurrentItemPanelAncestorAdded

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton AddItemButton;
    private javax.swing.JLabel BasePriceLabel;
    private javax.swing.JLabel BasePriceTextLabel;
    private javax.swing.JButton CancelButton;
    private javax.swing.JLabel CommentsLabel;
    private javax.swing.JPanel CommentsPanel;
    private javax.swing.JLabel CurrentItemLabel;
    private javax.swing.JPanel CurrentItemPanel;
    private javax.swing.JLabel CurrentItemTextLabel;
    private javax.swing.JTextArea ExtraCommentsArea;
    private javax.swing.JPanel MenuItemOptionsPanel;
    private javax.swing.JLabel NoOptionsLabel;
    private javax.swing.JPanel ToppingsPanel;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables
}
