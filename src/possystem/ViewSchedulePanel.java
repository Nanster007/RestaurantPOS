package possystem;

import java.awt.Font;
import java.awt.GridLayout;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.util.Calendar;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JLabel;
import javax.swing.SwingConstants;


/**
 *
 * @author tylar
 */
public class ViewSchedulePanel extends CustomPanel {

    private final MainFrame mainFrame;
    
    //calendar holds date variables important for graphics and file keeping
    private final Calendar calendar;
    
    //holds actual calendar graphic
    private ViewScheduleCalendar viewScheduleCalendar;
    
    public ViewSchedulePanel(MainFrame mainFrame, Calendar calendar) throws IOException, FileNotFoundException, ClassNotFoundException {
        initComponents();
        this.mainFrame = mainFrame;
        this.calendar = calendar;
        //update clock field to current panel
        setClockField(ClockLabel);
        
        createCalendar();
        
        //set calendar labels
        YearLabel.setText("" + getYear());
        MonthLabel.setText(mainFrame.months[getMonth()]);
        //set current user label
        CurrentUserLabel.setText("Welcome: " + mainFrame.getCurrentUser().getName());
        
        //dont allow user to clock in if already clocked in
        if(mainFrame.getCurrentUser().getClockedIn()){
            ClockInButton.setEnabled(false);
        }
        //vice versa
        else{
           ClockOutButton.setEnabled(false);
        }
        
        try{
            LastActionLabel.setText(mainFrame.getCurrentUser().getLastClock().toString());
        }
        catch(NullPointerException e){
            LastActionLabel.setText("");
        }
    }

    //create the Calendar graphic
    private void createCalendar() throws IOException, FileNotFoundException, ClassNotFoundException{
    
        viewScheduleCalendar = new ViewScheduleCalendar(mainFrame, calendar);
        //add graphic to this panel
        CalendarPanel.add(viewScheduleCalendar);
        CalendarPanel.setLayout(new GridLayout(1, 1));
        
        //create days of week labels
        LabelsPanel.setLayout(new GridLayout(1, 7));
        for(int x=0; x<7; x++){
            JLabel label = new JLabel(mainFrame.daysOfWeek[x], SwingConstants.CENTER);
            label.setFont(new Font("Tahoma", 1, 18));
            LabelsPanel.add(label);
        }

    }
    
    private int getYear(){
        return calendar.get(Calendar.YEAR);
    }
    
    private int getMonth(){
        return calendar.get(Calendar.MONTH);
    }
    
    private void setTime(Date date){
        this.calendar.setTime(date);
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        CurrentUserLabel = new javax.swing.JLabel();
        ClockLabel = new javax.swing.JTextField();
        YearLabel = new javax.swing.JLabel();
        MonthLabel = new javax.swing.JLabel();
        LabelsPanel = new javax.swing.JPanel();
        ClockingPanel = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        LastActionLabel = new javax.swing.JLabel();
        ClockOutButton = new javax.swing.JButton();
        ClockInButton = new javax.swing.JButton();
        ExcessiveClocks = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        CalendarPanel = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        PreviousMonthButton = new javax.swing.JButton();
        NextMonthButton = new javax.swing.JButton();
        BackButton = new javax.swing.JButton();

        CurrentUserLabel.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        CurrentUserLabel.setText("Welcome: User's Name");

        ClockLabel.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        ClockLabel.setText("jTextField1");
        ClockLabel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ClockLabelActionPerformed(evt);
            }
        });

        YearLabel.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        YearLabel.setText("jLabel1");

        MonthLabel.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        MonthLabel.setText("jLabel2");

        LabelsPanel.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        javax.swing.GroupLayout LabelsPanelLayout = new javax.swing.GroupLayout(LabelsPanel);
        LabelsPanel.setLayout(LabelsPanelLayout);
        LabelsPanelLayout.setHorizontalGroup(
            LabelsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        LabelsPanelLayout.setVerticalGroup(
            LabelsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 35, Short.MAX_VALUE)
        );

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel1.setText("Last Clock At:");

        LastActionLabel.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        LastActionLabel.setText(" ");

        ClockOutButton.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        ClockOutButton.setText("Clock Out");
        ClockOutButton.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));
        ClockOutButton.setMaximumSize(new java.awt.Dimension(150, 23));
        ClockOutButton.setMinimumSize(new java.awt.Dimension(150, 23));
        ClockOutButton.setPreferredSize(new java.awt.Dimension(150, 23));
        ClockOutButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ClockOutButtonActionPerformed(evt);
            }
        });

        ClockInButton.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        ClockInButton.setText("ClockIn");
        ClockInButton.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));
        ClockInButton.setMaximumSize(new java.awt.Dimension(150, 23));
        ClockInButton.setMinimumSize(new java.awt.Dimension(150, 23));
        ClockInButton.setPreferredSize(new java.awt.Dimension(150, 23));
        ClockInButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ClockInButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout ClockingPanelLayout = new javax.swing.GroupLayout(ClockingPanel);
        ClockingPanel.setLayout(ClockingPanelLayout);
        ClockingPanelLayout.setHorizontalGroup(
            ClockingPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, ClockingPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(ClockingPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(ClockingPanelLayout.createSequentialGroup()
                        .addComponent(ClockInButton, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(ExcessiveClocks, javax.swing.GroupLayout.DEFAULT_SIZE, 218, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(ClockOutButton, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(ClockingPanelLayout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(LastActionLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap())
        );
        ClockingPanelLayout.setVerticalGroup(
            ClockingPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ClockingPanelLayout.createSequentialGroup()
                .addGroup(ClockingPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(LastActionLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(ClockingPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(ClockingPanelLayout.createSequentialGroup()
                        .addComponent(ExcessiveClocks, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addContainerGap())
                    .addComponent(ClockInButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(ClockOutButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );

        CalendarPanel.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        javax.swing.GroupLayout CalendarPanelLayout = new javax.swing.GroupLayout(CalendarPanel);
        CalendarPanel.setLayout(CalendarPanelLayout);
        CalendarPanelLayout.setHorizontalGroup(
            CalendarPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        CalendarPanelLayout.setVerticalGroup(
            CalendarPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 280, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(CalendarPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(CalendarPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        PreviousMonthButton.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        PreviousMonthButton.setText("Previous Month");
        PreviousMonthButton.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));
        PreviousMonthButton.setPreferredSize(new java.awt.Dimension(107, 50));
        PreviousMonthButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PreviousMonthButtonActionPerformed(evt);
            }
        });

        NextMonthButton.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        NextMonthButton.setText("Next Month");
        NextMonthButton.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));
        NextMonthButton.setPreferredSize(new java.awt.Dimension(107, 50));
        NextMonthButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                NextMonthButtonActionPerformed(evt);
            }
        });

        BackButton.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        BackButton.setText("Back");
        BackButton.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));
        BackButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BackButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(PreviousMonthButton, javax.swing.GroupLayout.PREFERRED_SIZE, 260, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(NextMonthButton, javax.swing.GroupLayout.PREFERRED_SIZE, 260, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
            .addComponent(BackButton, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(NextMonthButton, javax.swing.GroupLayout.DEFAULT_SIZE, 39, Short.MAX_VALUE)
                    .addComponent(PreviousMonthButton, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addComponent(BackButton, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(LabelsPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(YearLabel)
                            .addComponent(CurrentUserLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 164, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(ClockLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 220, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(ClockingPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(MonthLabel)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(CurrentUserLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(ClockLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(YearLabel))
                    .addComponent(ClockingPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(MonthLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(LabelsPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void ClockLabelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ClockLabelActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ClockLabelActionPerformed

    private void BackButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BackButtonActionPerformed
        try {
            mainFrame.setNewPanel(new MainMenuPanel(mainFrame));
        } catch (IOException | ClassNotFoundException ex) {
            Logger.getLogger(ViewSchedulePanel.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_BackButtonActionPerformed

    private void PreviousMonthButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PreviousMonthButtonActionPerformed
        
        //previous month needs date change
        //date variable used to generate new graphic with respect to the new month
        Date date;
        
        //if going from Jan to December of previous year, decrement year and reset to december
        if(getMonth()== 0){
            date = new Date(getYear()-1901, 11, 1);
        }
        //else set date to previous month of current year
        else{
            date = new Date(getYear()-1900, getMonth()-1, 1);
        }
           
        //set current calendar to new date
        //date then passed to brand new ViewSchedulePanel, generating new graphics with respect to new date
        setTime(date);
        try {
            mainFrame.setNewPanel(new ViewSchedulePanel(mainFrame, calendar));
        } catch (IOException | ClassNotFoundException ex) {
            Logger.getLogger(ViewSchedulePanel.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_PreviousMonthButtonActionPerformed

    private void NextMonthButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_NextMonthButtonActionPerformed
        //next month needs date change
        //date variable used to generate new graphic with respect to the new month
        Date date;
        
        //if going from December to January of next year, increment year and reset to january
        if(getMonth()== 11){
            date = new Date(getYear() - 1899, 0, 1);
        }
        //else set date to next month of current year
        else{
            date = new Date(getYear() - 1900, getMonth()+1, 1);
        }
           
        //set current calendar to new date
        //date then passed to brand new ViewSchedulePanel, generating new graphics with respect to new date
        setTime(date);
        try {
            mainFrame.setNewPanel(new ViewSchedulePanel(mainFrame, calendar));
        } catch (IOException | ClassNotFoundException ex) {
            Logger.getLogger(ViewSchedulePanel.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_NextMonthButtonActionPerformed

    private void ClockInButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ClockInButtonActionPerformed
        try {
            if((System.currentTimeMillis()/1000 - mainFrame.getCurrentUser().getLastClock().getTime()/1000) > 300 && !mainFrame.getCurrentUser().getClockedIn()){
                try {
                    mainFrame.clockIn();
                    mainFrame.setNewPanel(new ViewSchedulePanel(mainFrame, calendar));
                } catch (IOException | ClassNotFoundException ex) {
                    Logger.getLogger(ViewSchedulePanel.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
            else{
                ExcessiveClocks.setText("Recent clock too soon, please wait.");
            }
        } catch (IOException | ClassNotFoundException ex) {
            Logger.getLogger(ViewSchedulePanel.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        
        
    }//GEN-LAST:event_ClockInButtonActionPerformed

    private void ClockOutButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ClockOutButtonActionPerformed
        try {
            mainFrame.clockOut();
            mainFrame.setNewPanel(new ViewSchedulePanel(mainFrame, calendar));
        } catch (IOException | ClassNotFoundException ex) {
            Logger.getLogger(ViewSchedulePanel.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_ClockOutButtonActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton BackButton;
    private javax.swing.JPanel CalendarPanel;
    private javax.swing.JButton ClockInButton;
    private javax.swing.JTextField ClockLabel;
    private javax.swing.JButton ClockOutButton;
    private javax.swing.JPanel ClockingPanel;
    private javax.swing.JLabel CurrentUserLabel;
    private javax.swing.JLabel ExcessiveClocks;
    private javax.swing.JPanel LabelsPanel;
    private javax.swing.JLabel LastActionLabel;
    private javax.swing.JLabel MonthLabel;
    private javax.swing.JButton NextMonthButton;
    private javax.swing.JButton PreviousMonthButton;
    private javax.swing.JLabel YearLabel;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    // End of variables declaration//GEN-END:variables
}
